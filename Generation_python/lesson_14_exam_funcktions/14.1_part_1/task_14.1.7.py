""" –ß–∏—Å–ª–æ —Å–ª–æ–≤–∞–º–∏ üå∂Ô∏è.
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é number_to_words(num), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ num –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ
    —Å–ª–æ–≤–µ—Å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –°—á–∏—Ç–∞–π—Ç–µ, —á—Ç–æ —á–∏—Å–ª–æ 1 ‚â§ num ‚â§ 99.
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥:
print(number_to_words(7))
print(number_to_words(85))
–¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:
—Å–µ–º—å
–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç –ø—è—Ç—å"""


def number_to_words(num):
    lst1 = [None, '–æ–¥–∏–Ω', '–¥–≤–∞', '—Ç—Ä–∏', '—á–µ—Ç—ã—Ä–µ', '–ø—è—Ç—å', '—à–µ—Å—Ç—å', '—Å–µ–º—å', '–≤–æ—Å–µ–º—å', '–¥–µ–≤—è—Ç—å', '–¥–µ—Å—è—Ç—å', '–æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç—å',
            '–¥–≤–µ–Ω–∞–¥—Ü–∞—Ç—å', '—Ç—Ä–∏–Ω–∞–¥—Ü–∞—Ç—å', '—á–µ—Ç—ã—Ä–Ω–∞–¥—Ü–∞—Ç—å', '–ø—è—Ç–Ω–∞–¥—Ü–∞—Ç—å', '—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç—å', '—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å', '–≤–æ—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å',
            '–¥–µ–≤—è—Ç–Ω–∞–¥—Ü–∞—Ç—å']
    lst2 = [None, None, '–¥–≤–∞–¥—Ü–∞—Ç—å', '—Ç—Ä–∏–¥—Ü–∞—Ç—å', '—Å–æ—Ä–æ–∫', '–ø—è—Ç—å–¥–µ—Å—è—Ç', '—à–µ—Å—Ç—å–¥–µ—Å—è—Ç', '—Å–µ–º—å–¥–µ—Å—è—Ç', '–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç',
            '–¥–µ–≤—è–Ω–æ—Å—Ç–æ']
    if 1 <= num <= 19:
        return lst1[num]
    elif num % 10 == 0:
        return lst2[num // 10]
    else:
        return lst2[num // 10] + ' ' + lst1[num % 10]


print(number_to_words(int(input())))
