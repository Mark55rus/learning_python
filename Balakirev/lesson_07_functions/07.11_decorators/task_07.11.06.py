""" Подвиг 5. Объявите функцию, которая принимает строку на кириллице и
преобразовывает ее в латиницу, используя следующий словарь для замены
русских букв на соответствующее латинское написание:
t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e',
'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm',
'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u',
'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh', 'щ': 'shch', 'ъ': '',
'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}
Функция должна возвращать преобразованную строку. Замены делать без учета
регистра (исходную строку перевести в нижний регистр - малые буквы). Все
небуквенные символы ": ;.,_" превращать в символ '-' (дефиса).
Определите декоратор для этой функции, который несколько подряд идущих
дефисов, превращает в один дефис. Полученная строка должна возвращаться при
вызове декоратора. (Сам декоратор на экран ничего выводить не должен).
Примените декоратор к первой функции и вызовите ее для введенной строки s на
кириллице:
s = input()
Результат работы декорированной функции отобразите на экране."""

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e',
     'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm',
     'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u',
     'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh', 'щ': 'shch', 'ъ': '',
     'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}


def decorator(func):
    def wrapper(*args, **kwargs):
        translate_text: str = func(*args, **kwargs)
        while "--" in translate_text:
            translate_text = translate_text.replace("--", '-')
        return translate_text

    return wrapper


@decorator
def translate(text):
    new_text = ''
    for char in text.lower():
        if char == ' ':
            new_text += '-'
        elif char in ": ;.,_":
            char += '-'
        else:
            new_text += t.get(char, char)
    return new_text


s = input()
print(translate(s))
